1. The BUILDER is a creational design pattern that lets us create complex objects on a step by step basis.
2. It allows us to produce different types and representations of an object using the same construction process.
3. This pattern suggests that we extract the object construction or creation code out of its own class and move it to
separate objects called builders.
4. The Builder design pattern is intended to separate the construction of an object from its representation.
5. We have to create a builder class containing the same fields of the object we need created. Inside of this class,
we will have several setter methods for these fields, and a "build" method responsible for creating the object.
6. If the same creation code is used to create several objects in our application, then we can think about creating a
"director" class.
